Self-Join:
A self-join is used when you want to join a table with itself.
It is particularly useful when you have a hierarchical or recursive data structure within a single table.
Here's an example of a self-join in MySQL:
SELECT t1.column1, t2.column2
FROM your_table t1
JOIN your_table t2 ON t1.related_column = t2.related_column;
In the above example, your_table is the name of the table you want to join with itself. t1 and t2 are table aliases representing two different instances of the same table. related_column is the column used to establish the relationship between the two instances of the table.

Inner Join:
An inner join returns only the rows that have matching values in both tables being joined.
Here's an example:
SELECT t1.column1, t2.column2
FROM table1 t1
INNER JOIN table2 t2 ON t1.related_column = t2.related_column;
In this example, table1 and table2 are the names of the two tables you want to join,
 and related_column is the column used to match the rows.

Left Join:
A left join returns all the rows from the left table and the matching rows from the right table. If there is no match, NULL values are returned for the columns of the right table.
Here's an example:
SELECT t1.column1, t2.column2
FROM table1 t1
LEFT JOIN table2 t2 ON t1.related_column = t2.related_column;
In this example, table1 is the left table, and table2 is the right table.

Right Join:
A right join returns all the rows from the right table and the matching rows from the left table. If there is no match,
NULL values are returned for the columns of the left table.
Here's an example:
SELECT t1.column1, t2.column2
FROM table1 t1
RIGHT JOIN table2 t2 ON t1.related_column = t2.related_column;
In this example, table1 is the left table, and table2 is the right table.